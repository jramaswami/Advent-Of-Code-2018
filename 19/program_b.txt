;; Program B
0: addi 5 16 5              ; reg5 + 16 -> reg5
18: mulr 1 1 1              ; reg1 * reg1 -> reg1
19: mulr 5 1 1              ; reg5 * reg1 -> reg1
20: muli 1 11 1             ; reg1 * 11 -> reg1
21: addi 4 1 4              ; reg1 + 1 -> reg1
22: mulr 4 5 4              ; reg4 * reg5 -> reg4
23: addi 4 9 4              ; reg4 + 9 -> reg4
24: addr 1 4 1              ; reg1 + reg4 -> reg1
25: addr 5 0 5              ; reg5 + reg0 -> reg5
27: setr 5 x 4              ; reg5 -> reg4
28: mulr 4 5 4              ; reg4 * reg 5 -> reg4
29: addr 5 4 4              ; reg5 + reg4 -> reg4
30: mulr 5 4 4              ; reg5 + reg4 -> reg4
31: muli 4 14 4             ; reg4 * 14 -> reg4
32: mulr 4 5 4              ; reg4 * reg5 -> reg4
33: addr 1 4 1              ; reg1 + reg4 -> reg1  REG1 IS INNER LOOP CTR 10,551,267
34: seti 0 x 0              ; 0 -> reg0
35: seti 0 x 5              ; 0 -> reg5
1: seti 1 x 3               ; 1 -> reg3
    2: seti 1 x 2               ; 1 -> reg2
        3: mulr 3 2 4               ; reg3 * reg2 -> reg4   REG4 = REG3 * REG2
        4: eqrr 4 1 4               ; reg4 == reg1 -> reg4  if REG4 == REG1 THEN
        5: addr 4 5 5               ; reg4 + reg5 -> reg5   
        6: addi 5 1 5               ; reg5 + 1 -> reg5
        7: addr 3 0 0               ; reg3 + reg0 -> reg0    INCR REG0 BY REG3
        8: addi 2 1 2               ; reg2 + 1 -> reg2       INCR REG2 BY 1
        9: gtrr 2 1 4               ; reg2 > reg1 -> reg4    IF REG2 > REG1 EXIT LOOP
        10: addr 5 4 5              ; reg5 + reg4 -> reg5
        11: seti 2 x 5              ; 2 -> reg5    (loop to 3)
    12: addi 3 1 3              ; reg3 + 1 -> reg3  INCR REG3
    13: gtrr 3 1 4              ; reg3 > reg1 -> reg4  if REG3 > REG1 EXIT LOOP
    14: addr 4 5 5              ; reg4 + reg5 -> reg5
    15: seti 1 0 5              ; 1 -> reg5     (loop to 2)
16: mulr 5 5 5              ; reg5 * reg5 -> reg5
HALT
